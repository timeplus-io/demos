-- OCSF Network Activity Data Flattening Query
-- Extracts all nested JSON fields into a flat table structure

CREATE VIEW ocsf.v_ocsf_authentication_flatten
AS
SELECT
  _tp_time, activity_id, category_uid, class_uid, severity_id, event_time, type_uid, type_name, category_name, class_name, activity_name, severity, status_id, status, metadata_version, metadata_event_code, metadata_log_name, metadata_log_provider, metadata_logged_time, metadata_original_time, metadata_processed_time, metadata_correlation_uid, product_name, product_version, product_vendor_name, product_uid, product_lang, product_url_string, extension_name, extension_uid, extension_version, metadata_profiles, user_name, user_email_addr, user_uid, user_type, user_domain, user_groups, user_org_name, user_org_uid, device_name, device_type, device_type_id, device_ip, device_mac, device_hostname, device_domain, device_instance_uid, device_interface_name, device_interface_uid, device_region, device_subnet_uid, device_uid, device_hypervisor, device_imei, device_is_managed, device_is_personal, device_is_trusted, device_risk_level, device_risk_level_id, device_os_name, device_os_version, device_os_build, device_os_type, device_os_type_id, device_os_country, device_os_sp_name, device_os_sp_ver, device_location_city, device_location_country, device_location_region, device_location_lat, device_location_lon, device_owner_name, device_owner_email, device_owner_uid, device_owner_type, device_owner_domain, device_owner_groups, device_owner_org_name, device_owner_org_uid, src_endpoint_ip, src_endpoint_port, src_endpoint_hostname, src_endpoint_mac, src_endpoint_domain, src_endpoint_subnet_uid, src_location_city, src_location_country, src_location_region, src_location_lat, src_location_lon, dst_endpoint_ip, dst_endpoint_port, dst_endpoint_hostname, dst_endpoint_mac, dst_endpoint_domain, dst_endpoint_subnet_uid, dst_location_city, dst_location_country, dst_location_region, dst_location_lat, dst_location_lon, session_uid, session_created_time, session_is_remote, logon_type, logon_type_id, auth_protocol, auth_protocol_id, is_cleartext, is_mfa, simulator_generated_at, simulator_class_uid, simulator_version, simulator_profiles, json_extract_string(observables_item, 'name') AS observable_name, json_extract_string(observables_item, 'type') AS observable_type, json_extract_string(observables_item, 'value') AS observable_value, to_datetime(event_time / 1000) AS event_datetime, to_datetime(metadata_logged_time / 1000) AS logged_datetime, to_datetime(metadata_processed_time / 1000) AS processed_datetime, to_datetime(session_created_time / 1000) AS session_created_datetime
FROM
  (
    SELECT
      _tp_time, json_extract_int(raw, 'activity_id') AS activity_id, json_extract_int(raw, 'category_uid') AS category_uid, json_extract_int(raw, 'class_uid') AS class_uid, json_extract_int(raw, 'severity_id') AS severity_id, json_extract_uint(raw, 'time') AS event_time, json_extract_string(raw, 'type_uid') AS type_uid, json_extract_string(raw, 'type_name') AS type_name, json_extract_string(raw, 'category_name') AS category_name, json_extract_string(raw, 'class_name') AS class_name, json_extract_string(raw, 'activity_name') AS activity_name, json_extract_string(raw, 'severity') AS severity, json_extract_int(raw, 'status_id') AS status_id, json_extract_string(raw, 'status') AS status, json_extract_string(raw:metadata, 'version') AS metadata_version, json_extract_string(raw:metadata, 'event_code') AS metadata_event_code, json_extract_string(raw:metadata, 'log_name') AS metadata_log_name, json_extract_string(raw:metadata, 'log_provider') AS metadata_log_provider, json_extract_uint(raw:metadata, 'logged_time') AS metadata_logged_time, json_extract_string(raw:metadata, 'original_time') AS metadata_original_time, json_extract_uint(raw:metadata, 'processed_time') AS metadata_processed_time, json_extract_string(raw:metadata, 'correlation_uid') AS metadata_correlation_uid, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`product`'), 'name') AS product_name, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`product`'), 'version') AS product_version, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`product`'), 'vendor_name') AS product_vendor_name, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`product`'), 'uid') AS product_uid, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`product`'), 'lang') AS product_lang, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`product`'), 'url_string') AS product_url_string, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`extension`'), 'name') AS extension_name, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`extension`'), 'uid') AS extension_uid, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`extension`'), 'version') AS extension_version, json_extract_string(raw:metadata, 'profiles') AS metadata_profiles, json_extract_string(raw:user, 'name') AS user_name, json_extract_string(raw:user, 'email_addr') AS user_email_addr, json_extract_string(raw:user, 'uid') AS user_uid, json_extract_string(raw:user, 'type') AS user_type, json_extract_string(raw:user, 'domain') AS user_domain, json_extract_string(raw:user, 'groups') AS user_groups, json_extract_string(json_value(json_value(raw, '$.`user`'), '$.`org`'), 'name') AS user_org_name, json_extract_string(json_value(json_value(raw, '$.`user`'), '$.`org`'), 'uid') AS user_org_uid, json_extract_string(raw:device, 'name') AS device_name, json_extract_string(raw:device, 'type') AS device_type, json_extract_int(raw:device, 'type_id') AS device_type_id, json_extract_string(raw:device, 'ip') AS device_ip, json_extract_string(raw:device, 'mac') AS device_mac, json_extract_string(raw:device, 'hostname') AS device_hostname, json_extract_string(raw:device, 'domain') AS device_domain, json_extract_string(raw:device, 'instance_uid') AS device_instance_uid, json_extract_string(raw:device, 'interface_name') AS device_interface_name, json_extract_string(raw:device, 'interface_uid') AS device_interface_uid, json_extract_string(raw:device, 'region') AS device_region, json_extract_string(raw:device, 'subnet_uid') AS device_subnet_uid, json_extract_string(raw:device, 'uid') AS device_uid, json_extract_string(raw:device, 'hypervisor') AS device_hypervisor, json_extract_string(raw:device, 'imei') AS device_imei, json_extract_string(raw:device, 'is_managed') AS device_is_managed, json_extract_string(raw:device, 'is_personal') AS device_is_personal, json_extract_string(raw:device, 'is_trusted') AS device_is_trusted, json_extract_string(raw:device, 'risk_level') AS device_risk_level, json_extract_int(raw:device, 'risk_level_id') AS device_risk_level_id, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`os`'), 'name') AS device_os_name, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`os`'), 'version') AS device_os_version, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`os`'), 'build') AS device_os_build, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`os`'), 'type') AS device_os_type, json_extract_int(json_value(json_value(raw, '$.`device`'), '$.`os`'), 'type_id') AS device_os_type_id, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`os`'), 'country') AS device_os_country, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`os`'), 'sp_name') AS device_os_sp_name, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`os`'), 'sp_ver') AS device_os_sp_ver, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`location`'), 'city') AS device_location_city, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`location`'), 'country') AS device_location_country, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`location`'), 'region') AS device_location_region, json_extract_array(json_value(json_value(raw, '$.`device`'), '$.`location`'), 'coordinates')[1] AS device_location_lat, json_extract_array(json_value(json_value(raw, '$.`device`'), '$.`location`'), 'coordinates')[2] AS device_location_lon, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`owner`'), 'name') AS device_owner_name, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`owner`'), 'email_addr') AS device_owner_email, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`owner`'), 'uid') AS device_owner_uid, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`owner`'), 'type') AS device_owner_type, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`owner`'), 'domain') AS device_owner_domain, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`owner`'), 'groups') AS device_owner_groups, json_extract_string(json_value(json_value(json_value(raw, '$.`device`'), '$.`owner`'), '$.`org`'), 'name') AS device_owner_org_name, json_extract_string(json_value(json_value(json_value(raw, '$.`device`'), '$.`owner`'), '$.`org`'), 'uid') AS device_owner_org_uid, json_extract_string(raw:src_endpoint, 'ip') AS src_endpoint_ip, json_extract_int(raw:src_endpoint, 'port') AS src_endpoint_port, json_extract_string(raw:src_endpoint, 'hostname') AS src_endpoint_hostname, json_extract_string(raw:src_endpoint, 'mac') AS src_endpoint_mac, json_extract_string(raw:src_endpoint, 'domain') AS src_endpoint_domain, json_extract_string(raw:src_endpoint, 'subnet_uid') AS src_endpoint_subnet_uid, json_extract_string(json_value(json_value(raw, '$.`src_endpoint`'), '$.`location`'), 'city') AS src_location_city, json_extract_string(json_value(json_value(raw, '$.`src_endpoint`'), '$.`location`'), 'country') AS src_location_country, json_extract_string(json_value(json_value(raw, '$.`src_endpoint`'), '$.`location`'), 'region') AS src_location_region, json_extract_array(json_value(json_value(raw, '$.`src_endpoint`'), '$.`location`'), 'coordinates')[1] AS src_location_lat, json_extract_array(json_value(json_value(raw, '$.`src_endpoint`'), '$.`location`'), 'coordinates')[2] AS src_location_lon, json_extract_string(raw:dst_endpoint, 'ip') AS dst_endpoint_ip, json_extract_int(raw:dst_endpoint, 'port') AS dst_endpoint_port, json_extract_string(raw:dst_endpoint, 'hostname') AS dst_endpoint_hostname, json_extract_string(raw:dst_endpoint, 'mac') AS dst_endpoint_mac, json_extract_string(raw:dst_endpoint, 'domain') AS dst_endpoint_domain, json_extract_string(raw:dst_endpoint, 'subnet_uid') AS dst_endpoint_subnet_uid, json_extract_string(json_value(json_value(raw, '$.`dst_endpoint`'), '$.`location`'), 'city') AS dst_location_city, json_extract_string(json_value(json_value(raw, '$.`dst_endpoint`'), '$.`location`'), 'country') AS dst_location_country, json_extract_string(json_value(json_value(raw, '$.`dst_endpoint`'), '$.`location`'), 'region') AS dst_location_region, json_extract_array(json_value(json_value(raw, '$.`dst_endpoint`'), '$.`location`'), 'coordinates')[1] AS dst_location_lat, json_extract_array(json_value(json_value(raw, '$.`dst_endpoint`'), '$.`location`'), 'coordinates')[2] AS dst_location_lon, json_extract_string(raw:session, 'uid') AS session_uid, json_extract_uint(raw:session, 'created_time') AS session_created_time, json_extract_string(raw:session, 'is_remote') AS session_is_remote, json_extract_string(raw, 'logon_type') AS logon_type, json_extract_int(raw, 'logon_type_id') AS logon_type_id, json_extract_string(raw, 'auth_protocol') AS auth_protocol, json_extract_int(raw, 'auth_protocol_id') AS auth_protocol_id, json_extract_string(raw, 'is_cleartext') AS is_cleartext, json_extract_string(raw, 'is_mfa') AS is_mfa, json_extract_string(raw:_simulator, 'generated_at') AS simulator_generated_at, json_extract_int(raw:_simulator, 'class_uid') AS simulator_class_uid, json_extract_string(raw:_simulator, 'version') AS simulator_version, json_extract_string(raw:_simulator, 'profiles') AS simulator_profiles, array_join(json_extract_array(raw, 'observables')) AS observables_item
    FROM
      ocsf.ocsf_events
    WHERE
      (json_value(raw, '$.`class_uid`') = '3002') AND (_tp_time > earliest_timestamp())
  );


CREATE VIEW ocsf.v_ocsf_network_activity_flatten
AS
SELECT
  _tp_time, json_extract_int(raw, 'activity_id') AS activity_id, json_extract_int(raw, 'category_uid') AS category_uid, json_extract_int(raw, 'class_uid') AS class_uid, json_extract_int(raw, 'severity_id') AS severity_id, json_extract_uint(raw, 'time') AS event_time, json_extract_string(raw, 'type_uid') AS type_uid, json_extract_string(raw, 'type_name') AS type_name, json_extract_string(raw, 'category_name') AS category_name, json_extract_string(raw, 'class_name') AS class_name, json_extract_string(raw, 'activity_name') AS activity_name, json_extract_string(raw, 'severity') AS severity, json_extract_int(raw, 'status_id') AS status_id, json_extract_string(raw, 'status') AS status, json_extract_string(raw:metadata, 'version') AS metadata_version, json_extract_string(raw:metadata, 'event_code') AS metadata_event_code, json_extract_string(raw:metadata, 'log_name') AS metadata_log_name, json_extract_string(raw:metadata, 'log_provider') AS metadata_log_provider, json_extract_uint(raw:metadata, 'logged_time') AS metadata_logged_time, json_extract_string(raw:metadata, 'original_time') AS metadata_original_time, json_extract_uint(raw:metadata, 'processed_time') AS metadata_processed_time, json_extract_string(raw:metadata, 'correlation_uid') AS metadata_correlation_uid, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`product`'), 'name') AS product_name, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`product`'), 'version') AS product_version, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`product`'), 'vendor_name') AS product_vendor_name, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`product`'), 'uid') AS product_uid, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`product`'), 'lang') AS product_lang, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`product`'), 'url_string') AS product_url_string, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`extension`'), 'name') AS extension_name, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`extension`'), 'uid') AS extension_uid, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`extension`'), 'version') AS extension_version, json_extract_string(raw:metadata, 'profiles') AS metadata_profiles, json_extract_string(raw:src_endpoint, 'ip') AS src_ip, json_extract_int(raw:src_endpoint, 'port') AS src_port, json_extract_string(raw:src_endpoint, 'hostname') AS src_hostname, json_extract_string(raw:src_endpoint, 'mac') AS src_mac, json_extract_string(raw:src_endpoint, 'domain') AS src_domain, json_extract_string(raw:src_endpoint, 'subnet_uid') AS src_subnet_uid, json_extract_string(json_value(json_value(raw, '$.`src_endpoint`'), '$.`location`'), 'city') AS src_location_city, json_extract_string(json_value(json_value(raw, '$.`src_endpoint`'), '$.`location`'), 'country') AS src_location_country, json_extract_string(json_value(json_value(raw, '$.`src_endpoint`'), '$.`location`'), 'region') AS src_location_region, json_extract_array(json_value(json_value(raw, '$.`src_endpoint`'), '$.`location`'), 'coordinates')[1] AS src_location_lat, json_extract_array(json_value(json_value(raw, '$.`src_endpoint`'), '$.`location`'), 'coordinates')[2] AS src_location_lon, json_extract_string(raw:dst_endpoint, 'ip') AS dst_ip, json_extract_int(raw:dst_endpoint, 'port') AS dst_port, json_extract_string(raw:dst_endpoint, 'hostname') AS dst_hostname, json_extract_string(raw:dst_endpoint, 'mac') AS dst_mac, json_extract_string(raw:dst_endpoint, 'domain') AS dst_domain, json_extract_string(raw:dst_endpoint, 'subnet_uid') AS dst_subnet_uid, json_extract_string(json_value(json_value(raw, '$.`dst_endpoint`'), '$.`location`'), 'city') AS dst_location_city, json_extract_string(json_value(json_value(raw, '$.`dst_endpoint`'), '$.`location`'), 'country') AS dst_location_country, json_extract_string(json_value(json_value(raw, '$.`dst_endpoint`'), '$.`location`'), 'region') AS dst_location_region, json_extract_array(json_value(json_value(raw, '$.`dst_endpoint`'), '$.`location`'), 'coordinates')[1] AS dst_location_lat, json_extract_array(json_value(json_value(raw, '$.`dst_endpoint`'), '$.`location`'), 'coordinates')[2] AS dst_location_lon, json_extract_string(raw:connection_info, 'protocol_name') AS protocol_name, json_extract_int(raw:connection_info, 'protocol_num') AS protocol_num, json_extract_string(raw:connection_info, 'direction') AS direction, json_extract_int(raw:connection_info, 'direction_id') AS direction_id, json_extract_string(raw:connection_info, 'boundary') AS boundary, json_extract_int(raw:connection_info, 'boundary_id') AS boundary_id, json_extract_int(raw:traffic, 'bytes') AS traffic_bytes, json_extract_int(raw:traffic, 'packets') AS traffic_packets, json_extract_int(raw:traffic, 'bytes_in') AS traffic_bytes_in, json_extract_int(raw:traffic, 'bytes_out') AS traffic_bytes_out, json_extract_int(raw:traffic, 'packets_in') AS traffic_packets_in, json_extract_int(raw:traffic, 'packets_out') AS traffic_packets_out, json_extract_string(raw:tls, 'version') AS tls_version, json_extract_string(raw:tls, 'cipher') AS tls_cipher, json_extract_string(raw:tls, 'ja3_hash') AS tls_ja3_hash, json_extract_string(raw:tls, 'ja3s_hash') AS tls_ja3s_hash, json_extract_string(json_value(json_value(raw, '$.`tls`'), '$.`certificate`'), 'subject') AS cert_subject, json_extract_string(json_value(json_value(raw, '$.`tls`'), '$.`certificate`'), 'issuer') AS cert_issuer, json_extract_string(json_value(json_value(raw, '$.`tls`'), '$.`certificate`'), 'serial_number') AS cert_serial_number, json_extract_uint(json_value(json_value(raw, '$.`tls`'), '$.`certificate`'), 'created_time') AS cert_created_time, json_extract_uint(json_value(json_value(raw, '$.`tls`'), '$.`certificate`'), 'expiration_time') AS cert_expiration_time, json_value(json_extract_array(json_value(json_value(raw, '$.`tls`'), '$.`certificate`'), 'fingerprints')[1], '$.`algorithm`') AS cert_fingerprint_algorithm, json_value(json_extract_array(json_value(json_value(raw, '$.`tls`'), '$.`certificate`'), 'fingerprints')[1], '$.`value`') AS cert_fingerprint_value, json_extract_string(raw, 'proxy_endpoint') AS proxy_endpoint, json_value(json_extract_array(raw, 'observables')[1], '$.`name`') AS observable_1_name, json_value(json_extract_array(raw, 'observables')[1], '$.`type`') AS observable_1_type, json_value(json_extract_array(raw, 'observables')[1], '$.`value`') AS observable_1_value, json_value(json_extract_array(raw, 'observables')[2], '$.`name`') AS observable_2_name, json_value(json_extract_array(raw, 'observables')[2], '$.`type`') AS observable_2_type, json_value(json_extract_array(raw, 'observables')[2], '$.`value`') AS observable_2_value, json_extract_string(raw:_simulator, 'generated_at') AS simulator_generated_at, json_extract_int(raw:_simulator, 'class_uid') AS simulator_class_uid, json_extract_string(raw:_simulator, 'version') AS simulator_version, to_datetime(json_extract_uint(raw, 'time') / 1000) AS event_datetime, to_datetime(json_extract_uint(raw:metadata, 'logged_time') / 1000) AS logged_datetime, to_datetime(json_extract_uint(raw:metadata, 'processed_time') / 1000) AS processed_datetime, to_datetime(json_extract_uint(json_value(json_value(raw, '$.`tls`'), '$.`certificate`'), 'created_time') / 1000) AS cert_created_datetime, to_datetime(json_extract_uint(json_value(json_value(raw, '$.`tls`'), '$.`certificate`'), 'expiration_time') / 1000) AS cert_expiration_datetime
FROM
  ocsf.ocsf_events
WHERE
  (json_value(raw, '$.`class_uid`') = '4001') AND (_tp_time > earliest_timestamp());

CREATE VIEW ocsf.v_ocsf_process_activity_flatten
AS
SELECT
  _tp_time, json_extract_int(raw, 'activity_id') AS activity_id, json_extract_int(raw, 'category_uid') AS category_uid, json_extract_int(raw, 'class_uid') AS class_uid, json_extract_int(raw, 'severity_id') AS severity_id, json_extract_uint(raw, 'time') AS event_time, json_extract_string(raw, 'type_uid') AS type_uid, json_extract_string(raw, 'type_name') AS type_name, json_extract_string(raw, 'category_name') AS category_name, json_extract_string(raw, 'class_name') AS class_name, json_extract_string(raw, 'activity_name') AS activity_name, json_extract_string(raw, 'severity') AS severity, json_extract_int(raw, 'status_id') AS status_id, json_extract_string(raw, 'status') AS status, json_extract_string(raw:metadata, 'version') AS metadata_version, json_extract_string(raw:metadata, 'event_code') AS metadata_event_code, json_extract_string(raw:metadata, 'log_name') AS metadata_log_name, json_extract_string(raw:metadata, 'log_provider') AS metadata_log_provider, json_extract_uint(raw:metadata, 'logged_time') AS metadata_logged_time, json_extract_string(raw:metadata, 'original_time') AS metadata_original_time, json_extract_uint(raw:metadata, 'processed_time') AS metadata_processed_time, json_extract_string(raw:metadata, 'correlation_uid') AS metadata_correlation_uid, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`product`'), 'name') AS product_name, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`product`'), 'version') AS product_version, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`product`'), 'vendor_name') AS product_vendor_name, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`product`'), 'uid') AS product_uid, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`product`'), 'lang') AS product_lang, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`product`'), 'url_string') AS product_url_string, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`extension`'), 'name') AS extension_name, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`extension`'), 'uid') AS extension_uid, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`extension`'), 'version') AS extension_version, json_extract_string(raw:metadata, 'profiles') AS metadata_profiles, json_extract_string(raw:process, 'name') AS process_name, json_extract_int(raw:process, 'pid') AS process_pid, json_extract_string(raw:process, 'cmd_line') AS process_cmd_line, json_extract_uint(raw:process, 'created_time') AS process_created_time, json_extract_string(json_value(json_value(raw, '$.`process`'), '$.`file`'), 'name') AS process_file_name, json_extract_string(json_value(json_value(raw, '$.`process`'), '$.`file`'), 'path') AS process_file_path, json_extract_int(json_value(json_value(raw, '$.`process`'), '$.`file`'), 'size') AS process_file_size, json_extract_string(json_value(json_value(raw, '$.`process`'), '$.`file`'), 'type') AS process_file_type, json_extract_string(json_value(json_value(raw, '$.`process`'), '$.`file`'), 'mime_type') AS process_file_mime_type, json_extract_uint(json_value(json_value(raw, '$.`process`'), '$.`file`'), 'created_time') AS process_file_created_time, json_extract_uint(json_value(json_value(raw, '$.`process`'), '$.`file`'), 'modified_time') AS process_file_modified_time, json_value(json_extract_array(json_value(json_value(raw, '$.`process`'), '$.`file`'), 'hashes')[1], '$.`algorithm`') AS process_file_hash1_algorithm, json_value(json_extract_array(json_value(json_value(raw, '$.`process`'), '$.`file`'), 'hashes')[1], '$.`value`') AS process_file_hash1_value, json_value(json_extract_array(json_value(json_value(raw, '$.`process`'), '$.`file`'), 'hashes')[2], '$.`algorithm`') AS process_file_hash2_algorithm, json_value(json_extract_array(json_value(json_value(raw, '$.`process`'), '$.`file`'), 'hashes')[2], '$.`value`') AS process_file_hash2_value, json_extract_string(json_value(json_value(raw, '$.`process`'), '$.`user`'), 'name') AS process_user_name, json_extract_string(json_value(json_value(raw, '$.`process`'), '$.`user`'), 'email_addr') AS process_user_email, json_extract_string(json_value(json_value(raw, '$.`process`'), '$.`user`'), 'uid') AS process_user_uid, json_extract_string(json_value(json_value(raw, '$.`process`'), '$.`user`'), 'type') AS process_user_type, json_extract_string(json_value(json_value(raw, '$.`process`'), '$.`user`'), 'domain') AS process_user_domain, json_extract_string(json_value(json_value(raw, '$.`process`'), '$.`user`'), 'groups') AS process_user_groups, json_extract_string(json_value(json_value(json_value(raw, '$.`process`'), '$.`user`'), '$.`org`'), 'name') AS process_user_org_name, json_extract_string(json_value(json_value(json_value(raw, '$.`process`'), '$.`user`'), '$.`org`'), 'uid') AS process_user_org_uid, json_extract_string(json_value(json_value(raw, '$.`process`'), '$.`parent_process`'), 'name') AS process_parent_name, json_extract_int(json_value(json_value(raw, '$.`process`'), '$.`parent_process`'), 'pid') AS process_parent_pid, json_extract_string(json_value(json_value(raw, '$.`actor`'), '$.`process`'), 'name') AS actor_process_name, json_extract_int(json_value(json_value(raw, '$.`actor`'), '$.`process`'), 'pid') AS actor_process_pid, json_extract_string(json_value(json_value(raw, '$.`actor`'), '$.`process`'), 'cmd_line') AS actor_process_cmd_line, json_extract_uint(json_value(json_value(raw, '$.`actor`'), '$.`process`'), 'created_time') AS actor_process_created_time, json_extract_string(json_value(json_value(json_value(raw, '$.`actor`'), '$.`process`'), '$.`file`'), 'name') AS actor_file_name, json_extract_string(json_value(json_value(json_value(raw, '$.`actor`'), '$.`process`'), '$.`file`'), 'path') AS actor_file_path, json_extract_int(json_value(json_value(json_value(raw, '$.`actor`'), '$.`process`'), '$.`file`'), 'size') AS actor_file_size, json_extract_string(json_value(json_value(json_value(raw, '$.`actor`'), '$.`process`'), '$.`file`'), 'type') AS actor_file_type, json_extract_string(json_value(json_value(json_value(raw, '$.`actor`'), '$.`process`'), '$.`file`'), 'mime_type') AS actor_file_mime_type, json_extract_uint(json_value(json_value(json_value(raw, '$.`actor`'), '$.`process`'), '$.`file`'), 'created_time') AS actor_file_created_time, json_extract_uint(json_value(json_value(json_value(raw, '$.`actor`'), '$.`process`'), '$.`file`'), 'modified_time') AS actor_file_modified_time, json_value(json_extract_array(json_value(json_value(json_value(raw, '$.`actor`'), '$.`process`'), '$.`file`'), 'hashes')[1], '$.`algorithm`') AS actor_file_hash1_algorithm, json_value(json_extract_array(json_value(json_value(json_value(raw, '$.`actor`'), '$.`process`'), '$.`file`'), 'hashes')[1], '$.`value`') AS actor_file_hash1_value, json_value(json_extract_array(json_value(json_value(json_value(raw, '$.`actor`'), '$.`process`'), '$.`file`'), 'hashes')[2], '$.`algorithm`') AS actor_file_hash2_algorithm, json_value(json_extract_array(json_value(json_value(json_value(raw, '$.`actor`'), '$.`process`'), '$.`file`'), 'hashes')[2], '$.`value`') AS actor_file_hash2_value, json_extract_string(json_value(json_value(json_value(raw, '$.`actor`'), '$.`process`'), '$.`user`'), 'name') AS actor_process_user_name, json_extract_string(json_value(json_value(json_value(raw, '$.`actor`'), '$.`process`'), '$.`user`'), 'email_addr') AS actor_process_user_email, json_extract_string(json_value(json_value(json_value(raw, '$.`actor`'), '$.`process`'), '$.`user`'), 'uid') AS actor_process_user_uid, json_extract_string(json_value(json_value(json_value(raw, '$.`actor`'), '$.`process`'), '$.`user`'), 'type') AS actor_process_user_type, json_extract_string(json_value(json_value(json_value(raw, '$.`actor`'), '$.`process`'), '$.`user`'), 'domain') AS actor_process_user_domain, json_extract_string(json_value(json_value(json_value(raw, '$.`actor`'), '$.`process`'), '$.`user`'), 'groups') AS actor_process_user_groups, json_extract_string(json_value(json_value(json_value(json_value(raw, '$.`actor`'), '$.`process`'), '$.`user`'), '$.`org`'), 'name') AS actor_process_user_org_name, json_extract_string(json_value(json_value(json_value(json_value(raw, '$.`actor`'), '$.`process`'), '$.`user`'), '$.`org`'), 'uid') AS actor_process_user_org_uid, json_extract_string(json_value(json_value(json_value(raw, '$.`actor`'), '$.`process`'), '$.`parent_process`'), 'name') AS actor_process_parent_name, json_extract_int(json_value(json_value(json_value(raw, '$.`actor`'), '$.`process`'), '$.`parent_process`'), 'pid') AS actor_process_parent_pid, json_extract_string(json_value(json_value(raw, '$.`actor`'), '$.`user`'), 'name') AS actor_user_name, json_extract_string(json_value(json_value(raw, '$.`actor`'), '$.`user`'), 'email_addr') AS actor_user_email, json_extract_string(json_value(json_value(raw, '$.`actor`'), '$.`user`'), 'uid') AS actor_user_uid, json_extract_string(json_value(json_value(raw, '$.`actor`'), '$.`user`'), 'type') AS actor_user_type, json_extract_string(json_value(json_value(raw, '$.`actor`'), '$.`user`'), 'domain') AS actor_user_domain, json_extract_string(json_value(json_value(raw, '$.`actor`'), '$.`user`'), 'groups') AS actor_user_groups, json_extract_string(json_value(json_value(json_value(raw, '$.`actor`'), '$.`user`'), '$.`org`'), 'name') AS actor_user_org_name, json_extract_string(json_value(json_value(json_value(raw, '$.`actor`'), '$.`user`'), '$.`org`'), 'uid') AS actor_user_org_uid, json_extract_string(raw:device, 'name') AS device_name, json_extract_string(raw:device, 'type') AS device_type, json_extract_int(raw:device, 'type_id') AS device_type_id, json_extract_string(raw:device, 'ip') AS device_ip, json_extract_string(raw:device, 'mac') AS device_mac, json_extract_string(raw:device, 'hostname') AS device_hostname, json_extract_string(raw:device, 'domain') AS device_domain, json_extract_string(raw:device, 'instance_uid') AS device_instance_uid, json_extract_string(raw:device, 'interface_name') AS device_interface_name, json_extract_string(raw:device, 'interface_uid') AS device_interface_uid, json_extract_string(raw:device, 'region') AS device_region, json_extract_string(raw:device, 'subnet_uid') AS device_subnet_uid, json_extract_string(raw:device, 'uid') AS device_uid, json_extract_string(raw:device, 'hypervisor') AS device_hypervisor, json_extract_string(raw:device, 'imei') AS device_imei, json_extract_string(raw:device, 'is_managed') AS device_is_managed, json_extract_string(raw:device, 'is_personal') AS device_is_personal, json_extract_string(raw:device, 'is_trusted') AS device_is_trusted, json_extract_string(raw:device, 'risk_level') AS device_risk_level, json_extract_int(raw:device, 'risk_level_id') AS device_risk_level_id, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`os`'), 'name') AS device_os_name, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`os`'), 'version') AS device_os_version, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`os`'), 'build') AS device_os_build, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`os`'), 'type') AS device_os_type, json_extract_int(json_value(json_value(raw, '$.`device`'), '$.`os`'), 'type_id') AS device_os_type_id, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`os`'), 'country') AS device_os_country, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`os`'), 'sp_name') AS device_os_sp_name, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`os`'), 'sp_ver') AS device_os_sp_ver, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`location`'), 'city') AS device_location_city, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`location`'), 'country') AS device_location_country, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`location`'), 'region') AS device_location_region, json_extract_array(json_value(json_value(raw, '$.`device`'), '$.`location`'), 'coordinates')[1] AS device_location_lat, json_extract_array(json_value(json_value(raw, '$.`device`'), '$.`location`'), 'coordinates')[2] AS device_location_lon, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`owner`'), 'name') AS device_owner_name, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`owner`'), 'email_addr') AS device_owner_email, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`owner`'), 'uid') AS device_owner_uid, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`owner`'), 'type') AS device_owner_type, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`owner`'), 'domain') AS device_owner_domain, json_extract_string(json_value(json_value(raw, '$.`device`'), '$.`owner`'), 'groups') AS device_owner_groups, json_extract_string(json_value(json_value(json_value(raw, '$.`device`'), '$.`owner`'), '$.`org`'), 'name') AS device_owner_org_name, json_extract_string(json_value(json_value(json_value(raw, '$.`device`'), '$.`owner`'), '$.`org`'), 'uid') AS device_owner_org_uid, json_extract_string(raw, 'observables') AS observables, json_extract_string(raw:_simulator, 'generated_at') AS simulator_generated_at, json_extract_int(raw:_simulator, 'class_uid') AS simulator_class_uid, json_extract_string(raw:_simulator, 'version') AS simulator_version, json_extract_string(raw:_simulator, 'profiles') AS simulator_profiles, to_datetime(json_extract_uint(raw, 'time') / 1000) AS event_datetime, to_datetime(json_extract_uint(raw:metadata, 'logged_time') / 1000) AS logged_datetime, to_datetime(json_extract_uint(raw:metadata, 'processed_time') / 1000) AS processed_datetime, to_datetime(json_extract_uint(raw:process, 'created_time') / 1000) AS process_created_datetime, to_datetime(json_extract_uint(json_value(json_value(raw, '$.`process`'), '$.`file`'), 'created_time') / 1000) AS process_file_created_datetime, to_datetime(json_extract_uint(json_value(json_value(raw, '$.`process`'), '$.`file`'), 'modified_time') / 1000) AS process_file_modified_datetime, to_datetime(json_extract_uint(json_value(json_value(raw, '$.`actor`'), '$.`process`'), 'created_time') / 1000) AS actor_process_created_datetime, to_datetime(json_extract_uint(json_value(json_value(json_value(raw, '$.`actor`'), '$.`process`'), '$.`file`'), 'created_time') / 1000) AS actor_file_created_datetime, to_datetime(json_extract_uint(json_value(json_value(json_value(raw, '$.`actor`'), '$.`process`'), '$.`file`'), 'modified_time') / 1000) AS actor_file_modified_datetime
FROM
  ocsf.ocsf_events
WHERE
  (json_value(raw, '$.`class_uid`') = '1007') AND (_tp_time > earliest_timestamp());

CREATE VIEW ocsf.v_ocsf_security_finding_flatten
AS
SELECT
  _tp_time, activity_id, category_uid, class_uid, severity_id, event_time, type_uid, type_name, category_name, class_name, activity_name, severity, status_id, status, metadata_version, metadata_event_code, metadata_log_name, metadata_log_provider, metadata_logged_time, metadata_original_time, metadata_processed_time, metadata_correlation_uid, product_name, product_version, product_vendor_name, product_uid, product_lang, product_url_string, extension_name, extension_uid, extension_version, metadata_profiles, finding_title, finding_description, finding_uid, finding_created_time, finding_modified_time, finding_product_uid, finding_types, vulnerabilities, observables, simulator_generated_at, simulator_class_uid, simulator_version, simulator_profiles, json_extract_string(resources_item, 'name') AS resource_name, json_extract_string(resources_item, 'type') AS resource_type, json_extract_string(resources_item, 'uid') AS resource_uid, json_extract_string(malware_item, 'name') AS malware_name, json_extract_string(malware_item, 'classification') AS malware_classification, json_extract_string(malware_item, 'path') AS malware_path, json_extract_string(malware_item, 'provider') AS malware_provider, json_extract_string(malware_item, 'uid') AS malware_uid, json_extract_string(malware_item, 'cves') AS malware_cves, to_datetime(event_time / 1000) AS event_datetime, to_datetime(metadata_logged_time / 1000) AS logged_datetime, to_datetime(metadata_processed_time / 1000) AS processed_datetime, to_datetime(finding_created_time / 1000) AS finding_created_datetime, to_datetime(finding_modified_time / 1000) AS finding_modified_datetime
FROM
  (
    SELECT
      _tp_time, json_extract_int(raw, 'activity_id') AS activity_id, json_extract_int(raw, 'category_uid') AS category_uid, json_extract_int(raw, 'class_uid') AS class_uid, json_extract_int(raw, 'severity_id') AS severity_id, json_extract_uint(raw, 'time') AS event_time, json_extract_string(raw, 'type_uid') AS type_uid, json_extract_string(raw, 'type_name') AS type_name, json_extract_string(raw, 'category_name') AS category_name, json_extract_string(raw, 'class_name') AS class_name, json_extract_string(raw, 'activity_name') AS activity_name, json_extract_string(raw, 'severity') AS severity, json_extract_int(raw, 'status_id') AS status_id, json_extract_string(raw, 'status') AS status, json_extract_string(raw:metadata, 'version') AS metadata_version, json_extract_string(raw:metadata, 'event_code') AS metadata_event_code, json_extract_string(raw:metadata, 'log_name') AS metadata_log_name, json_extract_string(raw:metadata, 'log_provider') AS metadata_log_provider, json_extract_uint(raw:metadata, 'logged_time') AS metadata_logged_time, json_extract_string(raw:metadata, 'original_time') AS metadata_original_time, json_extract_uint(raw:metadata, 'processed_time') AS metadata_processed_time, json_extract_string(raw:metadata, 'correlation_uid') AS metadata_correlation_uid, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`product`'), 'name') AS product_name, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`product`'), 'version') AS product_version, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`product`'), 'vendor_name') AS product_vendor_name, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`product`'), 'uid') AS product_uid, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`product`'), 'lang') AS product_lang, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`product`'), 'url_string') AS product_url_string, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`extension`'), 'name') AS extension_name, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`extension`'), 'uid') AS extension_uid, json_extract_string(json_value(json_value(raw, '$.`metadata`'), '$.`extension`'), 'version') AS extension_version, json_extract_string(raw:metadata, 'profiles') AS metadata_profiles, json_extract_string(raw:finding_info, 'title') AS finding_title, json_extract_string(raw:finding_info, 'desc') AS finding_description, json_extract_string(raw:finding_info, 'uid') AS finding_uid, json_extract_uint(raw:finding_info, 'created_time') AS finding_created_time, json_extract_uint(raw:finding_info, 'modified_time') AS finding_modified_time, json_extract_string(raw:finding_info, 'product_uid') AS finding_product_uid, json_extract_string(raw:finding_info, 'types') AS finding_types, json_extract_string(raw, 'vulnerabilities') AS vulnerabilities, json_extract_string(raw, 'observables') AS observables, json_extract_string(raw:_simulator, 'generated_at') AS simulator_generated_at, json_extract_int(raw:_simulator, 'class_uid') AS simulator_class_uid, json_extract_string(raw:_simulator, 'version') AS simulator_version, json_extract_string(raw:_simulator, 'profiles') AS simulator_profiles, array_join(json_extract_array(raw, 'resources')) AS resources_item, array_join(json_extract_array(raw, 'malware')) AS malware_item
    FROM
      ocsf.ocsf_events
    WHERE
      (json_value(raw, '$.`class_uid`') = '2001') AND (_tp_time > earliest_timestamp())
  );